<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.member">
	<!-- 리절트 맵 정의 -->	
	<resultMap id="memberResult" type="MemberVO">
	    <result property="member_num" column="member_num"/>
	    <result property="member_id" column="member_id"/>
	    <result property="member_pw" column="member_pw"/>
	    <result property="member_name" column="member_name"/>
	    <result property="member_gender" column="member_gender"/>
	    <result property="member_birth_y" column="member_birth_y"/>
	    <result property="member_birth_m" column="member_birth_m"/>
	    <result property="member_birth_d" column="member_birth_d"/>
	    <result property="member_birth_gn" column="member_birth_gn"/>
	    <result property="tel1" column="tel1"/>
	    <result property="tel2" column="tel2"/>
	    <result property="tel3" column="tel3"/>
	    <result property="smssts_yn" column="smssts_yn"/>
	    <result property="email1" column="email1"/>
	    <result property="email2" column="email2"/>
	    <result property="emailsts_yn" column="emailsts_yn"/>
	    <result property="zipcode" column="zipcode"/>
	    <result property="roadAddress" column="roadAddress"/>
	    <result property="jibunAddress" column="jibunAddress"/>
	    <result property="namujiAddress" column="namujiAddress"/>
	    <result property="member_join" column="member_join"/>
	    <result property="del_yn" column="del_yn"/>
	</resultMap>	

	<select id="login" resultType="memberVO" parameterType="memberVO"  >
	    <![CDATA[
			select * from member 
			where member_id=#{member_id}
			and member_pw=#{member_pw}			 
		]]>
	</select>
	
	<select id="findkakaoid" resultType="memberVO" parameterType="memberVO">
  		<![CDATA[
  			select * from member where member_id = #{member_id} and member_name = #{member_name}
  		]]>
  	</select>
  	
  	<insert id="insertkakao" parameterType="memberVO">
  		<![CDATA[
  			insert into member(member_id, member_name) values (#{member_id}, #{member_name})
  		]]>
  	</insert>
  	
	<select id="selectOverlappedID" parameterType="String" resultType="int">
	    <![CDATA[
	        select 
	            (select count(*) from member where member_id = #{member_id}) +
	            (select count(*) from business where seller_id = #{member_id})
	        as total_count
	    ]]>
	</select>
	
  	<select id="selectOverlappedEmail" parameterType="memberVO" resultType="String">
		<![CDATA[
			SELECT IF(COUNT(*) > 0, 'true', 'false')
			FROM member
			WHERE email1 = #{email1} AND email2 = #{email2} 
		]]>
	</select>
  		
	<insert id="insertNewMember"  parameterType="memberVO">
  		<![CDATA[
    	insert into member(
				        member_id,
				        member_pw,
				        member_name,
				        member_gender,
				        member_birth_y,
				        member_birth_m,
				        member_birth_d,
				        member_birth_gn,
				        tel1,
				        tel2,
				        tel3,
				        smssts_yn,
				        email1,
				        email2,
				        emailsts_yn,
				        zipcode,
				        roadAddress,
				        jibunAddress,
				        namujiAddress
				    ) values(#{member_id},
						#{member_pw},
						#{member_name},
             			#{member_gender},
               			#{member_birth_y},
               			#{member_birth_m},
                   		#{member_birth_d},
                   		#{member_birth_gn},
                   		#{tel1},
                   		#{tel2},
                   		#{tel3},
                   		#{smssts_yn},
                   		#{email1},
                   		#{email2},
                   		#{emailsts_yn},
                   		#{zipcode},
                   		#{roadAddress},
                   		#{jibunAddress},
                   		#{namujiAddress})                                  
   		]]>      
  	</insert>
  	
  	<update id="removeMember" parameterType="String">
  		<![CDATA[
  			update member set del_yn='Y' where member_id = #{member_id}
 	 	]]>
  	</update>
	
	<select id="findId" resultType="String" parameterType="memberVO">
		(SELECT member_id FROM member
		 WHERE member_name = #{member_name} AND email1 = #{email1} AND email2 = #{email2} AND (del_yn = 'N' OR del_yn IS NULL))
		
		UNION ALL
		
		(SELECT seller_id FROM business
		 WHERE owner_name = #{member_name} AND email1 = #{email1} AND email2 = #{email2} AND (del_yn = 'N' OR del_yn IS NULL))
	</select>
	
	<select id="findPw" resultType="String" parameterType="memberVO">
		(SELECT member_pw FROM member
		 WHERE member_id = #{member_id} AND email1 = #{email1} AND email2 = #{email2} AND (del_yn = 'N' OR del_yn IS NULL))
		
		UNION ALL
		
		(SELECT seller_pw FROM business
		 WHERE seller_id = #{member_id} AND email1 = #{email1} AND email2 = #{email2} AND (del_yn = 'N' OR del_yn IS NULL))
	</select>
	
</mapper>